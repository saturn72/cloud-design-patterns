version: '3.7'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    labels:
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.docker.localhost`)"

  reverse-proxy:
    image: traefik:v2.6
    container_name: 'traefik'
    command: --api.insecure=true --providers.docker
    ports:
      - "81:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.docker.localhost`)"

  seq:
    image: datalust/seq
    container_name: 'seq'
    restart: unless-stopped
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
  sqldata:
    image: mcr.microsoft.com/mssql/server:2019-latest 
    labels:
      - "traefik.http.routers.seq.rule=Host(`seq.docker.localhost`)"

  identityserver:
    image: ${DOCKER_REGISTRY-}identityserver
    build:
      context: .
      dockerfile: IdentityServer/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:5000
    ports:
      - "5000:5000"
    depends_on:
      - sqldata
    labels:
      - "traefik.http.routers.identity.rule=Host(`identity.docker.localhost`)"

  commandapi:
    image: ${DOCKER_REGISTRY-}commandapi
    build:
      context: .
      dockerfile: CommandAPI/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:5010
    ports:
      - "5010:5010"
    labels:
      - "traefik.http.routers.command.rule=Host(`command.docker.localhost`)"
    depends_on:
      #- rabbitmq
      - identityserver

  queryapi:
    image: ${DOCKER_REGISTRY-}queryapi
    build:
      context: .
      dockerfile: QueryAPI/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:5020
    ports:
      - "5020:5020"
    labels:
      - "traefik.http.routers.query.rule=Host(`query.docker.localhost`)"
    depends_on:
      - commandapi
      #- rabbitmq
      - identityserver

